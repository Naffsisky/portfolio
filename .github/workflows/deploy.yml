name: CI/CD

on:
  push:
    branches: ['main']

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set IMAGE (lowercase)
        run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - name: Meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # (opsional) sanity check koneksi
      - name: Test SSH
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo OK"

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' <<'EOS'
          set -e
          # --- Konfigurasi ---
          APP_DIR="/opt/myapp"
          IMAGE="${{ env.IMAGE }}:latest"
          GHCR_USERNAME='${{ secrets.GHCR_USERNAME }}'
          GHCR_TOKEN='${{ secrets.GHCR_TOKEN }}'

          mkdir -p "$APP_DIR"
          cd "$APP_DIR"

          # Tulis docker-compose.yml (pakai port 3000:3000; ganti ke 80:3000 kalau mau)
          cat > docker-compose.yml <<YML
          services:
            web:
              image: $IMAGE
              container_name: myapp
              restart: unless-stopped
              ports:
                - "3000:3000"
              env_file:
                - .env
          YML

          # Login GHCR kalau token tersedia (skip kalau kosong / image public)
          if [ -n "\$GHCR_TOKEN" ] && [ -n "\$GHCR_USERNAME" ]; then
            echo "\$GHCR_TOKEN" | docker login ghcr.io -u "\$GHCR_USERNAME" --password-stdin
          fi

          docker compose pull
          docker compose up -d
          docker image prune -f
          EOS
